{% set _entity_config = easyadmin_entity(app.request.query.get('entity')) %}
{% trans_default_domain _entity_config.translation_domain %}
{% set _trans_parameters = { '%entity_name%': _entity_config.name|trans, '%entity_label%': _entity_config.label|trans } %}

{% extends _entity_config.templates.layout %}

{% set _request_parameters = app.request.query.all|merge(_request_parameters|default({}))|merge({
    action: app.request.get('action'),
    entity: _entity_config.name,
    menuIndex: app.request.get('menuIndex'),
    submenuIndex: app.request.get('submenuIndex'),
    sortField: app.request.get('sortField', ''),
    sortDirection: app.request.get('sortDirection', 'DESC'),
    page: app.request.get('page', 1),
    referer: null
}) %}

{% if 'search' == app.request.get('action') %}
    {% set _request_parameters = _request_parameters|merge({
        query: app.request.get('query')|default(''),
        sortField: _entity_config.search.sort.field|default(app.request.get('sortField', '')),
        sortDirection: _entity_config.search.sort.direction|default(app.request.get('sortDirection', 'DESC')),
    }) %}
{% endif %}

{% set _request_parameters = _request_parameters|merge({ referer: path('easyadmin', _request_parameters)|url_encode }) %}

{% block body_id 'easyadmin-list-' ~ _entity_config.name %}
{% block body_class 'list list-' ~ _entity_config.name|lower %}

{% block content_title %}
{% spaceless %}
    {% if 'search' == app.request.get('action') %}
        {% set _default_title = 'search.page_title'|transchoice(paginator.nbResults, {}, 'EasyAdminBundle') %}
        {{ (_entity_config.search.title is defined ? _entity_config.search.title|transchoice(paginator.nbResults) : _default_title)|raw }}
    {% else %}
        {% set _default_title = 'list.page_title'|trans(_trans_parameters, 'EasyAdminBundle') %}
        {{ (_entity_config.list.title is defined ? _entity_config.list.title|trans(_trans_parameters) : _default_title)|raw }}
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block content_header %}
    <div class="row">
        <div class="col-sm-5">
            {% block content_title_wrapper %}
                <h1 class="title">{{ block('content_title') }}</h1>
            {% endblock %}
        </div>
    </div>
{% endblock content_header %}

{% block main %}
    {% set _list_item_actions = easyadmin_get_actions_for_list_item(_entity_config.name) %}

    {% if data|length > 0 %}
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Тип</th>
                <th scope="col">Файл</th>
                <th scope="col">Статус</th>
                <th scope="col">Создано</th>
            </tr>
            </thead>
            <tbody>
                {% for item in data %}
                    <tr>
                        <td>{{ item.type }}</td>
                        <td>{{ item.path }}</td>
                        <td>{{ item.status|join('') }}</td>
                        <td>{{ item.created|date("Y-m-d h:i:s") }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% endif %}

    <form action="/admin/?entity=ImportProduct&action=importproduct" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="exampleFormControlSelect1">Тип прайс-листа</label>
            <select class="form-control" id="exampleFormControlSelect1" name="type">
                {% for key, type_item in types %}
                    <option value="{{ key }}">{{ type_item }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="form-group">
            <label for="fileUploading"> Выбрать файлы (XLS): </label>
            <input type="file" class="form-control-file" name="fileUpload[]" multiple id="fileUploading" >
        </div>
        <input type="submit" name="Submit" class="btn btn-primary" value="Загрузить" >
    </form>

    {% block paginator %}
        {{ include(_entity_config.templates.paginator) }}
    {% endblock paginator %}

    {% block delete_form %}
        {% set referer = paginator.currentPage == paginator.nbPages and 1 != paginator.currentPage and 1 == paginator.currentPageResults|length
            ? path('easyadmin', app.request.query|merge({ page: app.request.query.get('page') - 1 }))
            : app.request.requestUri
        %}

        {{ include('@EasyAdmin/default/includes/_delete_form.html.twig', {
            view: 'list',
            referer: referer|url_encode,
            delete_form: delete_form_template,
            _translation_domain: _entity_config.translation_domain,
            _trans_parameters: _trans_parameters,
            _entity_config: _entity_config,
        }, with_context = false) }}
    {% endblock delete_form %}
{% endblock main %}

{% block body_javascript %}
    {{ parent() }}
    <script src="{{ asset('bundles/easyadmin/javascript/jquery.MultiFile.min.js') }}"></script>
    <script type="text/javascript">
        $(function() {
            $('#main').find('table .toggle input[type="checkbox"]').change(function() {
                var toggle = $(this);
                var newValue = toggle.prop('checked');
                var oldValue = !newValue;

                var columnIndex = $(this).closest('td').index() + 1;
                var propertyName = $('table th.toggle:nth-child(' + columnIndex + ')').data('property-name');

                var toggleUrl = "{{ path('easyadmin', { action: 'edit', entity: _entity_config.name, view: 'list' })|raw }}"
                              + "&id=" + $(this).closest('tr').data('id')
                              + "&property=" + propertyName
                              + "&newValue=" + newValue.toString();

                var toggleRequest = $.ajax({ type: "GET", url: toggleUrl, data: {} });

                toggleRequest.done(function(result) {});

                toggleRequest.fail(function() {
                    // in case of error, restore the original value and disable the toggle
                    toggle.bootstrapToggle(oldValue == true ? 'on' : 'off');
                    toggle.bootstrapToggle('disable');
                });
            });

            $('.action-delete').on('click', function(e) {
                e.preventDefault();
                var id = $(this).parents('tr').first().data('id');

                $('#modal-delete').modal({ backdrop: true, keyboard: true })
                    .off('click', '#modal-delete-button')
                    .on('click', '#modal-delete-button', function () {
                        var deleteForm = $('#delete-form');
                        deleteForm.attr('action', deleteForm.attr('action').replace('__id__', id));
                        deleteForm.trigger('submit');
                    });
            });
        });
    </script>

    {% if 'search' == app.request.get('action') %}
        <script type="text/javascript">
            var _search_query = "{{ app.request.get('query')|default('')|e('js') }}";
            // the original query is prepended to allow matching exact phrases in addition to single words
            $('#main').find('table tbody').highlight($.merge([_search_query], _search_query.split(' ')));
        </script>
    {% endif %}
{% endblock %}
